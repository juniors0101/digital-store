.galleryContainer {
  display: flex;
  flex-direction: column;
  align-items: center;
  gap: 20px;
  position: relative; /* For absolute positioning of arrows */
}

.mainImageWrapper {
  position: relative;
  width: 100%;
  height: 100%; /* Will be controlled by parent if width/height props are used */
  display: flex;
  align-items: center;
  justify-content: center;
}

.mainImage {
  width: 100%;
  height: 100%;
  object-fit: contain; /* Or 'cover' depending on desired cropping */
  transition: transform 0.3s ease-in-out; /* For smooth slide effect (CSS transform needed for actual slide) */
}

.arrowButton {
  position: absolute;
  background-color: rgba(255, 255, 255, 0.7);
  border: none;
  cursor: pointer;
  padding: 10px;
  border-radius: 50%;
  display: flex;
  align-items: center;
  justify-content: center;
  z-index: 10;
  box-shadow: 0 2px 5px rgba(0, 0, 0, 0.2);
}

.arrowButton:disabled {
  opacity: 0.5;
  cursor: not-allowed;
}

.arrowButton img {
  width: 24px;
  height: 24px;
}

.leftArrow {
  left: 10px;
}

.rightArrow {
  right: 10px;
}

.thumbnails {
  display: flex;
  gap: 10px;
  margin-top: 10px;
  overflow-x: auto; /* Allow horizontal scrolling for many thumbnails */
  padding-bottom: 5px; /* Space for scrollbar */
}

.thumbnailItem {
  width: 117px;
  height: 95px;
  object-fit: cover;
  cursor: pointer;
  border: 2px solid transparent;
  transition: border-color 0.3s ease;
}

.thumbnailItem.activeThumbnail {
  border-color: var(--color-primary);
}

.noImages {
  text-align: center;
  padding: 20px;
  color: var(--color-light-gray);
}